{"ast":null,"code":"var _jsxFileName = \"D:\\\\navbar-dropdown-v1\\\\src\\\\components\\\\Modal.js\";\nimport React, { useRef } from \"react\";\nimport ReactDom from \"react-dom\";\nexport const Modal = _ref => {\n  let {\n    setShowModal\n  } = _ref;\n  // close the modal when clicking outside the modal.\n  const modalRef = useRef();\n\n  const closeModal = e => {\n    if (e.target === modalRef.current) {\n      setShowModal(false);\n    }\n  }; //render the modal JSX in the portal div.\n\n\n  return ReactDom.createPortal( /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    ref: modalRef,\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"This is a Modal\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"X\"))), document.getElementById(\"portal\"));\n};","map":{"version":3,"sources":["D:/navbar-dropdown-v1/src/components/Modal.js"],"names":["React","useRef","ReactDom","Modal","setShowModal","modalRef","closeModal","e","target","current","createPortal","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,MAAMC,KAAK,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AACzC;AACA,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;;AACA,QAAMK,UAAU,GAAIC,CAAD,IAAO;AACxB,QAAIA,CAAC,CAACC,MAAF,KAAaH,QAAQ,CAACI,OAA1B,EAAmC;AACjCL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAJD,CAHyC,CAQzC;;;AACA,SAAOF,QAAQ,CAACQ,YAAT,eACL;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEL,QAAhC;AAA0C,IAAA,OAAO,EAAEC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMF,YAAY,CAAC,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF,CADK,EAOLO,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAPK,CAAP;AASD,CAlBM","sourcesContent":["import React, { useRef } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nexport const Modal = ({ setShowModal }) => {\r\n  // close the modal when clicking outside the modal.\r\n  const modalRef = useRef();\r\n  const closeModal = (e) => {\r\n    if (e.target === modalRef.current) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n  //render the modal JSX in the portal div.\r\n  return ReactDom.createPortal(\r\n    <div className=\"container\" ref={modalRef} onClick={closeModal}>\r\n      <div className=\"modal\">\r\n        <h2>This is a Modal</h2>\r\n        <button onClick={() => setShowModal(false)}>X</button>\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}